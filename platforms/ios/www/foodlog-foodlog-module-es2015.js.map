{"version":3,"sources":["./src/app/foodlog/foodlog.page.scss","./src/app/foodlog/foodlog-routing.module.ts","./src/app/foodlog/foodlog.page.ts","./src/app/foodlog/foodlog.module.ts","./src/app/foodlog/foodlog.page.html"],"names":[],"mappings":"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","file":"foodlog-foodlog-module-es2015.js","sourcesContent":["export default \".error-message {\\n  color: var(--ion-color-danger);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2Zvb2Rsb2cucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksOEJBQUE7QUFDSiIsImZpbGUiOiJmb29kbG9nLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1tZXNzYWdlIHtcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG59Il19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FoodlogPage } from './foodlog.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodlogPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FoodlogPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HealthKit, HealthKitOptions } from '@ionic-native/health-kit/ngx';\nimport {UserService} from '../api/user.service';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport { NavController, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-foodlog',\n  templateUrl: './foodlog.page.html',\n  styleUrls: ['./foodlog.page.scss'],\n})\n  export class FoodlogPage implements OnInit {\n    get name() {\n      return this.foodForm.get(\"name\");\n    }\n    get time() {\n      return this.foodForm.get(\"time\");\n    }\n    get calories_i() {\n      return this.foodForm.get('calories_i');\n    }\n  \n    public errorMessages = {\n      name: [\n        { type: 'required', message: 'Food name is required' },\n        { type: 'maxlength', message: 'Food name cant be longer than 100 characters' }\n      ],\n      time: [\n        { type: 'required', message: 'Time is required' },\n        { type: 'pattern', message: 'Please enter a valid time' }\n      ],\n      calories_i: [\n        { type: 'required', message: 'Caloric intake is required' },\n        { type: 'pattern',message: 'Please enter a calorie count' } \n      ]\n    };\n  \n    dataFromService:any=\"\";\n    foodForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      time: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))$')\n        ]\n      ],\n      calories_i: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^[0-9]{1,4}$')\n        ]\n      ]\n    });\n  \n    //ionic generate page x\n   \n    constructor(private healthKit: HealthKit, private plt: Platform, public userService:UserService, private formBuilder: FormBuilder, private navCtrl : NavController) {\n      if (this.healthKit.available()) { console.log(\"Healthkit available\"); } \n    }\n  \n    dismissRegistration() {\n      this.navCtrl.navigateBack('/tabs/tab2');\n    }\n    \n    public submit() {\n      console.log(this.foodForm.value);\n    }\n    \n    SaveFood()\n    {\n      let name = this.foodForm.get(\"name\").value;\n      let time = this.foodForm.get(\"time\").value;\n      let calories_i = this.foodForm.get(\"calories_i\").value;\n      var dataToSend = {\n        food_name: name, \n        time: time, \n        calories_i: calories_i};\n      this.userService.Savefood(dataToSend).subscribe(\n        (dataReturnFromService)=>{\n          this.dataFromService = JSON.stringify(dataReturnFromService);\n          console.log(dataReturnFromService);\n          this.navCtrl.navigateBack('/tabs/tab2');\n        })\n  \n      //this.navCtrl.navigateForward('/tabs');\n    }\n\n    ngOnInit() {\n    }\n  \n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport { FoodlogPageRoutingModule } from './foodlog-routing.module';\n\nimport { FoodlogPage } from './foodlog.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FoodlogPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [FoodlogPage]\n})\nexport class FoodlogPageModule {}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-button color=\\\"light\\\" (click)=\\\"dismissRegistration()\\\">Back</ion-button>\\n    <ion-title>\\n      Food Log\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form [formGroup]=\\\"foodForm\\\" (ngSubmit)=\\\"submit()\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Food Name</ion-label>\\n        <ion-input autocapitalize inputmode=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.name\\\">\\n        <ng-container *ngIf=\\\"name.hasError(error.type) && (name.dirty || name.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Time Consumed </ion-label>\\n        <ion-input inputmode=\\\"text\\\" formControlName=\\\"time\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.time\\\">\\n        <ng-container *ngIf=\\\"time.hasError(error.type) && (time.dirty || time.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Calories</ion-label>\\n        <ion-input formControlName=\\\"calories_i\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.calories_i\\\">\\n        <ng-container *ngIf=\\\"calories_i.hasError(error.type) && (calories_i.dirty || calories_i.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n    </ion-list>\\n    <ion-button [disabled]=\\\"!foodForm.valid\\\" (click)=\\\"SaveFood()\\\" type=\\\"submit\\\" expand=\\\"block\\\">Submit <ion-icon slot=\\\"end\\\"\\n        name=\\\"create\\\">\\n      </ion-icon>\\n    </ion-button>\\n  </form>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}