{"version":3,"sources":["./src/app/activitylog/activitylog.page.scss","./src/app/activitylog/activitylog-routing.module.ts","./src/app/activitylog/activitylog.page.ts","./src/app/activitylog/activitylog.module.ts","./src/app/activitylog/activitylog.page.html"],"names":[],"mappings":"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","file":"activitylog-activitylog-module-es2015.js","sourcesContent":["export default \".error-message {\\n  color: var(--ion-color-danger);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FjdGl2aXR5bG9nLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDhCQUFBO0FBQ0oiLCJmaWxlIjoiYWN0aXZpdHlsb2cucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLW1lc3NhZ2Uge1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcbn0iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ActivitylogPage } from './activitylog.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ActivitylogPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ActivitylogPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HealthKit, HealthKitOptions } from '@ionic-native/health-kit/ngx';\nimport { UserService } from '../api/user.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NavController, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-activitylog',\n  templateUrl: './activitylog.page.html',\n  styleUrls: ['./activitylog.page.scss'],\n})\n  export class ActivitylogPage implements OnInit {\n    get name() {\n      return this.activityForm.get(\"name\");\n    }\n    get start_time() {\n      return this.activityForm.get(\"start_time\");\n    }\n    get end_time() {\n      return this.activityForm.get(\"end_time\");\n    }\n    get intensity() {\n      return this.activityForm.get('intensity');\n    }\n    get calories_b() {\n      return this.activityForm.get('calories_b');\n    }\n  \n    public errorMessages = {\n      name: [\n        { type: 'required', message: 'Activity name is required' },\n        { type: 'maxlength', message: 'Activity name cant be longer than 100 characters' }\n      ],\n      start_time: [\n        { type: 'required', message: 'Start time is required' },\n        { type: 'pattern', message: 'Please enter a valid Start time' }\n      ],\n      end_time: [\n        { type: 'required', message: 'End time is required' },\n        { type: 'pattern', message: 'Please enter a valid End time' }\n      ],\n      intensity: [\n        { type: 'required', message: 'Intensity is required' },\n        { type: 'pattern', message: 'Please enter a valid intensity' }\n      ],\n      calories_b: [\n        { type: 'required', message: 'Calories burned is required' },\n        { type: 'pattern',message: 'Please enter a calorie count' } \n      ]\n    };\n  \n    dataFromService:any=\"\";\n    activityForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      start_time: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))$')\n        ]\n      ],\n      end_time: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))$')\n        ]\n      ],\n      intensity: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^[1-5]$')\n        ]\n      ],\n      calories_b: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^[0-9]{1,4}$')\n        ]\n      ]\n    });\n   \n    constructor(private healthKit: HealthKit, private plt: Platform, public userService:UserService, private formBuilder: FormBuilder, private navCtrl : NavController) {\n      if (this.healthKit.available()) { console.log(\"Healthkit available\"); } \n    }\n\n    ngOnInit() {\n    }\n  \n    dismissRegistration() {\n      this.navCtrl.navigateBack('/tabs/tab2');\n    }\n    \n    public submit() {\n      console.log(this.activityForm.value);\n    }\n    \n    SaveActivity()\n    {\n      let name = this.activityForm.get(\"name\").value;\n      let start_time = this.activityForm.get(\"start_time\").value;\n      let end_time = this.activityForm.get(\"end_time\").value;\n      let intensity = this.activityForm.get(\"intensity\").value;\n      let calories_b = this.activityForm.get(\"calories_b\").value;\n      var dataToSend = {\n        activity_name: name, \n        start_time: start_time, \n        end_time: end_time, \n        intensity: intensity,\n        calories_b: calories_b};\n      this.userService.Saveactivity(dataToSend).subscribe(\n        (dataReturnFromService)=>{\n          this.dataFromService = JSON.stringify(dataReturnFromService);\n          console.log(dataReturnFromService);\n          this.navCtrl.navigateForward('/tabs/tab2');\n        })\n  \n    }\n  \n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ActivitylogPageRoutingModule } from './activitylog-routing.module';\n\nimport { ActivitylogPage } from './activitylog.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ActivitylogPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [ActivitylogPage]\n})\nexport class ActivitylogPageModule {}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-button color=\\\"light\\\" (click)=\\\"dismissRegistration()\\\">Back</ion-button>\\n    <ion-title>\\n      Activity Log\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form [formGroup]=\\\"activityForm\\\" (ngSubmit)=\\\"submit()\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Activity Name</ion-label>\\n        <ion-input autocapitalize inputmode=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.name\\\">\\n        <ng-container *ngIf=\\\"name.hasError(error.type) && (name.dirty || name.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Start Time</ion-label>\\n        <ion-input inputmode=\\\"text\\\" formControlName=\\\"start_time\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.start_time\\\">\\n        <ng-container *ngIf=\\\"start_time.hasError(error.type) && (start_time.dirty || start_time.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">End Time</ion-label>\\n        <ion-input inputmode=\\\"text\\\" formControlName=\\\"end_time\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.end_time\\\">\\n        <ng-container *ngIf=\\\"end_time.hasError(error.type) && (end_time.dirty || end_time.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Intensity(1-5)</ion-label>\\n        <ion-input autocapitalize inputmode=\\\"text\\\" formControlName=\\\"intensity\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.intensity\\\">\\n        <ng-container *ngIf=\\\"intensity.hasError(error.type) && (intensity.dirty || intensity.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Calories burned</ion-label>\\n        <ion-input formControlName=\\\"calories_b\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.calories_b\\\">\\n        <ng-container *ngIf=\\\"calories_b.hasError(error.type) && (calories_b.dirty || calories_b.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n    </ion-list>\\n    <ion-button [disabled]=\\\"!activityForm.valid\\\" (click)=\\\"SaveActivity()\\\" type=\\\"submit\\\" expand=\\\"block\\\">Submit <ion-icon slot=\\\"end\\\"\\n        name=\\\"create\\\">\\n      </ion-icon>\\n    </ion-button>\\n  </form>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}