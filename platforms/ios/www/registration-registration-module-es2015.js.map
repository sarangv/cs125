{"version":3,"sources":["./src/app/registration/registration.module.ts","./src/app/registration/registration.page.scss","./src/app/registration/registration.page.ts","./src/app/registration/registration.page.html","./src/app/registration/registration-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA6C;AACJ;AACM;AACF;AACiC;AACvB;AACJ;IAatC,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAVlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,0FAA6B;YAC7B,kEAAmB;SACpB;QACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;ACnBnC;AAAe,gFAAiB,mCAAmC,GAAG,6CAA6C,2SAA2S,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA5W;AACyB;AAC3B;AACO;AACE;IAO5C,gBAAgB,SAAhB,gBAAgB;IAyF3B,iBAAiB;IACjB,4BAA4B;IAC5B,wBAAwB;IACxB,gBAAgB;IAEhB,YAAoB,SAAoB,EAAU,GAAa,EAAS,WAAuB,EAAU,WAAwB,EAAU,OAAuB;QAA9I,cAAS,GAAT,SAAS,CAAW;QAAU,QAAG,GAAH,GAAG,CAAU;QAAS,gBAAW,GAAX,WAAW,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAgB;QAtE3J,kBAAa,GAAG;YACrB,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;gBACrD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,6CAA6C,EAAE;aAC9E;YACD,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAE;gBAClD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,oCAAoC,EAAE;aACnE;YACD,UAAU,EAAE;gBACV,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,wBAAwB,EAAE;gBACvD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,+CAA+C,EAAE;aAChF;YACD,SAAS,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,8CAA8C,EAAE;aAC/E;YACD,GAAG,EAAE;gBACH,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,iBAAiB,EAAE;gBAChD,EAAC,IAAI,EAAE,SAAS,EAAC,OAAO,EAAE,0BAA0B,EAAC;aACtD;YACD,MAAM,EAAE;gBACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;gBACnD,EAAC,IAAI,EAAE,SAAS,EAAC,OAAO,EAAE,6BAA6B,EAAC;aACzD;YACD,MAAM,EAAE;gBACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;gBACnD,EAAC,IAAI,EAAE,SAAS,EAAC,OAAO,EAAE,6BAA6B,EAAC;aACzD;SACF,CAAC;QAEF,oBAAe,GAAK,EAAE,CAAC;QACvB,qBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAChE,KAAK,EAAE;gBACL,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;iBACtE;aACF;YACD,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAClE,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjE,GAAG,EAAE;gBACH,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,cAAc,CAAC;iBACnC;aACF;YACD,MAAM,EAAE;gBACN,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,cAAc,CAAC;iBACnC;aACF;YACD,MAAM,EAAE;gBACN,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,cAAc,CAAC;iBACnC;aACF;SACF,CAAC,CAAC;QAOD,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE;YAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;SAAE;IACzE,CAAC;IA9FD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC/C,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IACD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAChD,CAAC;IACD,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IA4ED,mBAAmB;QACjB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAEM,MAAM;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IACD,QAAQ;QAEN,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC3D,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACrD,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC7D,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;QACjD,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QACvD,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QACvD,IAAI,UAAU,GAAG;YACf,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE,UAAU;YACtB,SAAS,EAAE,SAAS;YACpB,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,GAAG;SAAC,CAAC;QACV,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC3D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;YAzIQ,sEAAS;YAGM,uDAAQ;YAFxB,6DAAW;YACX,0DAAW;YACV,4DAAa;;AAOT,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,oFAAuC;;KAExC,CAAC;GACW,gBAAgB,CA+H5B;AA/H4B;;;;;;;;;;;;;ACX7B;AAAe,oxBAAqtB,eAAe,oaAAoa,eAAe,gdAAgd,eAAe,0cAA0c,eAAe,oYAAoY,eAAe,0ZAA0Z,eAAe,0ZAA0Z,eAAe,8gCAA8gC,oBAAoB,qEAAqE,wBAAwB,6BAA6B,0BAA0B,6BAA6B,oCAAoC,6BAA6B,iBAAiB,0FAA0F,E;;;;;;;;;;;;;;;;;;;ACAzpJ;AACc;AAEA;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;IAMW,6BAA6B,SAA7B,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH","file":"registration-registration-module-es2015.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RegistrationPageRoutingModule } from './registration-routing.module';\nimport { RegistrationPage } from './registration.page';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistrationPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegistrationPage]\n})\nexport class RegistrationPageModule {}\n","export default \".error-message {\\n  color: var(--ion-color-danger);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3JlZ2lzdHJhdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4QkFBQTtBQUNKIiwiZmlsZSI6InJlZ2lzdHJhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3ItbWVzc2FnZSB7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { HealthKit, HealthKitOptions } from '@ionic-native/health-kit/ngx';\nimport {UserService} from '../api/user.service';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport { NavController, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.page.html',\n  styleUrls: ['./registration.page.scss'],\n})\nexport class RegistrationPage {\n\n  get username() {\n    return this.registrationForm.get(\"username\");\n  }\n  get email() {\n    return this.registrationForm.get(\"email\");\n  }\n  get first_name() {\n    return this.registrationForm.get('first_name');\n  }\n  get last_name() {\n    return this.registrationForm.get('last_name');\n  }\n  get age() {\n    return this.registrationForm.get('age');\n  }\n  get weight() {\n    return this.registrationForm.get('weight');\n  }\n  get height() {\n    return this.registrationForm.get('height');\n  }\n\n  public errorMessages = {\n    username: [\n      { type: 'required', message: 'Username is required' },\n      { type: 'maxlength', message: 'Username cant be longer than 100 characters' }\n    ],\n    email: [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Please enter a valid email address' }\n    ],\n    first_name: [\n      { type: 'required', message: 'First Name is required' },\n      { type: 'maxlength', message: 'First Name cant be longer than 100 characters' }\n    ],\n    last_name: [\n      { type: 'required', message: 'Last Name is required' },\n      { type: 'maxlength', message: 'Last Name cant be longer than 100 characters' }\n    ],\n    age: [\n      { type: 'required', message: 'Age is required' },\n      {type: 'pattern',message: 'Please enter a valid age'}\n    ],\n    height: [\n      { type: 'required', message: 'Height is required' },\n      {type: 'pattern',message: 'Please enter a valid height'}\n    ],\n    weight: [\n      { type: 'required', message: 'Weight is required' },\n      {type: 'pattern',message: 'Please enter a valid weight'}\n    ],\n  };\n\n  dataFromService:any=\"\";\n  registrationForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.maxLength(100)]],\n    email: [\n      '',\n      [\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,4}$')\n      ]\n    ],\n    first_name: ['', [Validators.required, Validators.maxLength(100)]],\n    last_name: ['', [Validators.required, Validators.maxLength(100)]],\n    age: [\n      '',\n      [\n        Validators.required,\n        Validators.pattern('^[0-9]{1,2}$')\n      ]\n    ],\n    height: [\n      '',\n      [\n        Validators.required,\n        Validators.pattern('^[0-9]{1,3}$')\n      ]\n    ],\n    weight: [\n      '',\n      [\n        Validators.required,\n        Validators.pattern('^[0-9]{1,3}$')\n      ]\n    ] \n  });\n  //height: number;\n  //currentHeight = 'No Data';\n  //stepcount = 'No Data';\n  //workouts = [];\n \n  constructor(private healthKit: HealthKit, private plt: Platform, public userService:UserService, private formBuilder: FormBuilder, private navCtrl : NavController) {\n    if (this.healthKit.available()) { console.log(\"Healthkit available\"); } \n  }\n\n  dismissRegistration() {\n    this.navCtrl.navigateBack('/login');\n  }\n  \n  public submit() {\n    console.log(this.registrationForm.value);\n  }\n  SaveData()\n  {\n    let username = this.registrationForm.get(\"username\").value;\n    let email = this.registrationForm.get(\"email\").value;\n    let first_name = this.registrationForm.get(\"first_name\").value;\n    let last_name = this.registrationForm.get(\"last_name\").value;\n    let age = this.registrationForm.get(\"age\").value;\n    let weight = this.registrationForm.get(\"weight\").value;\n    let height = this.registrationForm.get(\"height\").value;\n    var dataToSend = {\n      username: username, \n      email: email, \n      first_name: first_name, \n      last_name: last_name, \n      height: height, \n      weight: weight, \n      age: age};\n      this.userService.Savedata(dataToSend).subscribe((response) => {\n        console.log(response);\n        this.navCtrl.navigateForward('/tabs');\n      });\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-button color=\\\"light\\\" (click)=\\\"dismissRegistration()\\\">Back</ion-button>\\n    <ion-title>\\n      Register\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"submit()\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Username</ion-label>\\n        <ion-input autocapitalize inputmode=\\\"text\\\" formControlName=\\\"username\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.username\\\">\\n        <ng-container *ngIf=\\\"username.hasError(error.type) && (username.dirty || username.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input inputmode=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.email\\\">\\n        <ng-container *ngIf=\\\"email.hasError(error.type) && (email.dirty || email.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">First Name</ion-label>\\n        <ion-input autocapitalize inputmode=\\\"text\\\" formControlName=\\\"first_name\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.first_name\\\">\\n        <ng-container *ngIf=\\\"first_name.hasError(error.type) && (first_name.dirty || first_name.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n        <ion-input autocapitalize inputmode=\\\"text\\\" formControlName=\\\"last_name\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.last_name\\\">\\n        <ng-container *ngIf=\\\"last_name.hasError(error.type) && (last_name.dirty || last_name.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Age</ion-label>\\n        <ion-input formControlName=\\\"age\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.age\\\">\\n        <ng-container *ngIf=\\\"age.hasError(error.type) && (age.dirty || age.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Height(in)</ion-label>\\n        <ion-input formControlName=\\\"height\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.height\\\">\\n        <ng-container *ngIf=\\\"height.hasError(error.type) && (height.dirty || height.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Weight(lb)</ion-label>\\n        <ion-input formControlName=\\\"weight\\\"></ion-input>\\n      </ion-item>\\n      <div *ngFor=\\\"let error of errorMessages.weight\\\">\\n        <ng-container *ngIf=\\\"weight.hasError(error.type) && (weight.dirty || weight.touched)\\\">\\n          <small class=\\\"error-message\\\">{{error.message}}</small>\\n        </ng-container>\\n      </div>\\n    </ion-list>\\n    <ion-button [disabled]=\\\"!registrationForm.valid\\\" (click)=\\\"SaveData()\\\" type=\\\"submit\\\" expand=\\\"block\\\">Submit <ion-icon slot=\\\"end\\\"\\n        name=\\\"create\\\">\\n      </ion-icon>\\n    </ion-button>\\n  </form>\\n  <!-- \\n  <ion-item>\\n    <ion-label stacked>Set Height</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"height\\\" placeholder=\\\"My Height today (in cm)\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label stacked>Current Height</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"currentHeight\\\" readonly></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label stacked>Steps last 24h</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"stepcount\\\" readonly></ion-input>\\n  </ion-item>\\n \\n  <button ion-button full (click)=\\\"saveHeight()\\\">Set Height</button>\\n  <button ion-button full (click)=\\\"saveWorkout()\\\">Set a Workout</button>\\n \\n  <ion-list>\\n    <ion-card *ngFor=\\\"let workout of workouts\\\">\\n      <ion-card-header>{{ workout.calories }}</ion-card-header>\\n      <ion-card-content>\\n        <p>Activity: {{ workout.activityType }}</p>\\n        <p>Duration: {{ workout.duration / 100 }} min</p>\\n        <p>Date: {{ workout.startDate | date:'short' }}</p>\\n        <p>Distance: {{ workout.miles }} miles</p>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list> -->\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistrationPage } from './registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistrationPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}